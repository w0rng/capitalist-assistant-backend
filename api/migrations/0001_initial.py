# Generated by Django 3.1.3 on 2020-11-13 07:00

import api.manager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=30, verbose_name='name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='surname')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='registered')),
                ('token', models.CharField(max_length=30, verbose_name='token')),
                ('age', models.PositiveIntegerField(blank=True, default=0, verbose_name='age')),
                ('gender', models.PositiveIntegerField(blank=True, choices=[(0, 'Ж'), (1, 'M')], default=0, verbose_name='gender')),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', api.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название транзакции')),
                ('ticket', models.TextField(verbose_name='Тикет')),
                ('price', models.FloatField(verbose_name='Цена транзакции')),
                ('data', models.DateField(verbose_name='Дата совершения транзакции')),
                ('active_type', models.PositiveIntegerField(choices=[(0, 'Акция'), (1, 'Облигация'), (2, 'Фонд')], verbose_name='Тип актива')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название кредита')),
                ('value', models.FloatField(verbose_name='Величина кредита')),
                ('payment', models.FloatField(verbose_name='Ежемесячная выплата')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Кредит',
                'verbose_name_plural': 'Кредиты',
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название вклада')),
                ('percentage_rate', models.FloatField(verbose_name='Процентная ставка')),
                ('current_amount', models.FloatField(verbose_name='Текущая сумма')),
                ('percentage_accrual_date', models.DateField(verbose_name='Дата начисления процентов')),
                ('percentage_to_contribution', models.BooleanField(default=False, verbose_name='Проценты начисляются на вклад')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Вклад',
                'verbose_name_plural': 'Вклады',
            },
        ),
    ]
